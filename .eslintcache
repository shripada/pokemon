[{"/Volumes/Development/react-sep20/pokemon/src/index.tsx":"1","/Volumes/Development/react-sep20/pokemon/src/reportWebVitals.ts":"2","/Volumes/Development/react-sep20/pokemon/src/App.tsx":"3","/Volumes/Development/react-sep20/pokemon/src/ErrorBoundary.js":"4","/Volumes/Development/react-sep20/pokemon/src/api/api.js":"5","/Volumes/Development/react-sep20/pokemon/src/components/SearchField/SearchField.js":"6","/Volumes/Development/react-sep20/pokemon/src/api/mocks/api.mock.js":"7","/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/index.js":"8","/Volumes/Development/react-sep20/pokemon/src/environments/index.js":"9","/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/PokemonViewer.tsx":"10","/Volumes/Development/react-sep20/pokemon/src/environments/dev.js":"11","/Volumes/Development/react-sep20/pokemon/src/environments/prod.js":"12","/Volumes/Development/react-sep20/pokemon/src/components/PokemonView/PokemonView.js":"13","/Volumes/Development/react-sep20/pokemon/src/components/Loader/Loader.js":"14","/Volumes/Development/react-sep20/pokemon/src/environments/base.js":"15","/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/types.ts":"16"},{"size":500,"mtime":1603941052137,"results":"17","hashOfConfig":"18"},{"size":426,"mtime":1603941052137,"results":"19","hashOfConfig":"18"},{"size":1678,"mtime":1606903204547,"results":"20","hashOfConfig":"18"},{"size":585,"mtime":1605857392226,"results":"21","hashOfConfig":"18"},{"size":1380,"mtime":1606384785684,"results":"22","hashOfConfig":"18"},{"size":995,"mtime":1605855818294,"results":"23","hashOfConfig":"18"},{"size":137,"mtime":1606382026585,"results":"24","hashOfConfig":"18"},{"size":120,"mtime":1606903041769,"results":"25","hashOfConfig":"18"},{"size":190,"mtime":1606289201151,"results":"26","hashOfConfig":"18"},{"size":1081,"mtime":1606922222251,"results":"27","hashOfConfig":"18"},{"size":168,"mtime":1606290531394,"results":"28","hashOfConfig":"18"},{"size":101,"mtime":1606289948515,"results":"29","hashOfConfig":"18"},{"size":604,"mtime":1605857527352,"results":"30","hashOfConfig":"18"},{"size":293,"mtime":1605852921873,"results":"31","hashOfConfig":"18"},{"size":124,"mtime":1606289903927,"results":"32","hashOfConfig":"18"},{"size":261,"mtime":1606902844026,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1st7oun",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Volumes/Development/react-sep20/pokemon/src/index.tsx",[],["73","74"],"/Volumes/Development/react-sep20/pokemon/src/reportWebVitals.ts",[],"/Volumes/Development/react-sep20/pokemon/src/App.tsx",["75","76"],"import './App.css';\n\nimport PokemonViewer, {Status} from './components/PokemonViewer'\nimport React, {Suspense, useEffect, useRef, useState} from 'react';\n\nimport ErrorBoundary from './ErrorBoundary'\nimport SearchField from './components/SearchField/SearchField'\nimport {fetchAPokemon} from './api/api';\n\n//let PokemonViewer:React.ReactNode = null; \n\n//const PokemonViewer = React.lazy(() => import('./components/PokemonViewer'));\n\nfunction App() {\n\n  console.log(\"If we are in dev mode we should see this-: \", process.env.REACT_APP_NOT_SECRET_CODE, process.env.REACT_APP_NOT_SECRET_CODE1);\n   \n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [pokemon, setPokemon] = useState(undefined)\n  const [status, setStatus] = useState(\"idle1\");\n  \n  useEffect(() => {\n    \n    if(searchTerm === \"\"){\n      setStatus('idle')\n      return;\n    }\n    \n    setStatus('loading');\n    fetchAPokemon(searchTerm).then((pokemon)=>{\n      setPokemon(pokemon)\n      setStatus('resolved')\n    }).catch((error)=>{\n      //process the error\n      setStatus('error')\n    })\n\n  }, [searchTerm])\n  \n  // const mounted = useRef(false);\n  // useEffect(() => {\n  //    if(mounted && mounted.current === false && searchTerm !== ''){\n  //       PokemonViewer = React.lazy(() => import('./components/PokemonViewer'));\n  //       mounted.current = false; \n  //    }     \n  // }, [searchTerm])\n  \n  return (\n    <div className=\"App\">\n        \n          <SearchField onSearchClicked={(search) => setSearchTerm(search) }/>\n          <ErrorBoundary>\n        \n            <PokemonViewer pokemonData={pokemon} status={status as Status}/>\n    \n        </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/Development/react-sep20/pokemon/src/ErrorBoundary.js",[],["77","78"],"/Volumes/Development/react-sep20/pokemon/src/api/api.js",["79"],"import environment from '../environments';\n// import { fetchPokemon as fetchPokemonJSON } from './mocks/api.mock';\nimport lget from 'lodash/get';\n\nconst BASE_URL =\n    process.env.NODE_ENV === 'development' ? 'https://dev.pokeapi.co/api/v2/' : 'https://pokeapi.co/api/v2/';\n\nasync function fetchPokemonURL(url) {\n    let response = await fetch(url);\n\n    if (response.ok) {\n        // if HTTP-status is 200-299\n        // get the response body (the method explained below)\n        // let json = await response.json();\n        // console.log(json);\n        return response.json();\n    } else {\n        //alert('HTTP-Error: ' + response.status);\n        throw new Error('HTTP-Error: ' + response.status);\n    }\n}\n\nasync function fetchAPokemon(pokemonName) {\n    //The url to fetch a pokemon should have subpath: pokemon\n\n    if (environment.shouldMock) {\n        //load the json file and return its content\n        if (pokemonName === 'ditto') {\n            return import('./mocks/api.mock').then((mockJson) => {\n                return mockJson.fetchPokemon(pokemonName);\n            });\n        }\n\n        throw new Error('The requested pockemon is not found in the mock folder');\n    } else {\n        const pokeMonURL = `${lget(environment.api.baseURL)}pokemon/${pokemonName}`;\n        return await fetchPokemonURL(pokeMonURL);\n    }\n}\n\nexport { fetchPokemonURL, fetchAPokemon };\n","/Volumes/Development/react-sep20/pokemon/src/components/SearchField/SearchField.js",["80","81"],"import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { on } from 'process';\nimport styles from './SearchField.module.css';\n\nconst SearchField = ({ placeholder = 'Enter pokemon name', onSearchClicked = (search) => {} }) => {\n    const [text, setText] = useState('');\n    return (\n        <div className={styles.SearchField}>\n            <input\n                className={styles.SearchInput}\n                type=\"search\"\n                value={text}\n                placeholder={placeholder}\n                onChange={(e) => {\n                    setText(e.target.value);\n                    if (e.target.value === '') {\n                        onSearchClicked('');\n                    }\n                }}\n            />\n            <button disabled={text === ''} className={styles.SearchButton} onClick={() => onSearchClicked(text)}>\n                Search\n            </button>\n        </div>\n    );\n};\n\nSearchField.propTypes = {};\n\nexport default SearchField;\n","/Volumes/Development/react-sep20/pokemon/src/api/mocks/api.mock.js",[],"/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/index.js",[],"/Volumes/Development/react-sep20/pokemon/src/environments/index.js",[],"/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/PokemonViewer.tsx",[],"/Volumes/Development/react-sep20/pokemon/src/environments/dev.js",[],"/Volumes/Development/react-sep20/pokemon/src/environments/prod.js",[],"/Volumes/Development/react-sep20/pokemon/src/components/PokemonView/PokemonView.js",["82"],"import PropTypes from 'prop-types';\nimport React from 'react';\nimport lget from 'lodash/get';\nimport styles from './PokemonView.module.css';\n\nconst PokemonView = ({ pokemon }) => {\n    let pokemonImageURL = lget(pokemon, 'sprites.other.official-artwork.front_default');\n\n    if (!pokemonImageURL) {\n        throw Error('Failed to fetch the image of the pokemon');\n    }\n\n    return (\n        <div className={styles.PokemonView}>\n            <img className={styles.PokemonImage} src={pokemonImageURL} alt=\"Pokemon\"></img>\n        </div>\n    );\n};\n\nPokemonView.propTypes = {};\n\nexport default PokemonView;\n","/Volumes/Development/react-sep20/pokemon/src/components/Loader/Loader.js",["83"],"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./Loader.module.css\";\n\nconst Loader = (props) => {\n  return (\n    <div className={styles.Loader}>\n      <div className={styles.Spinner}></div>\n    </div>\n  );\n};\n\nLoader.propTypes = {};\n\nexport default Loader;\n","/Volumes/Development/react-sep20/pokemon/src/environments/base.js",[],"/Volumes/Development/react-sep20/pokemon/src/components/PokemonViewer/types.ts",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":16,"nodeType":"90","messageId":"91","endLine":4,"endColumn":24},{"ruleId":"88","severity":1,"message":"92","line":4,"column":37,"nodeType":"90","messageId":"91","endLine":4,"endColumn":43},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":7,"nodeType":"90","messageId":"91","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"95","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"96","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":12},{"ruleId":"93","severity":1,"message":"95","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":17},{"ruleId":"93","severity":1,"message":"95","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":17},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-unused-vars","'BASE_URL' is assigned a value but never used.","'PropTypes' is defined but never used.","'on' is defined but never used.","no-global-assign","no-unsafe-negation"]